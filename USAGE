Preprocessing pipeline
======================

Run preprocessing pipeline

USAGE

nextflow run main.nf [OPTIONAL_ARGUMENTS] (--root)

DESCRIPTION

    --root=/path/to/[root]              Root folder containing multiple subjects

                                        [root]
                                        ├── S1
                                        │   ├── dwi.nii.gz
                                        │   ├── bval
                                        │   ├── bvec
                                        │   └── rev_b0.nii.gz  (optional)
                                        └── S2
                                            ├── dwi.nii.gz
                                            ├── bval
                                            ├── bvec
                                            └── rev_b0.nii.gz  (optional)

Files should be compressed Nifti files (.nii.gz)

OPTIONAL ARGUMENTS (current value)

--b0_thr_extract_b0                         All b-values below b0_thr_extract_b0 are considered b=0 images ($b0_thr_extract_b0).
--dwi_shell_tolerance                       All b-values to +-dwi_shell_tolerance are considered as the same b-value ($dwi_shell_tolerance).

--bet_prelim_f                              Fractional Intensity threshold for preliminary BET ($bet_prelim_f).
--dilate_b0_mask_prelim_brain_extraction    Dilation factor to keep the whole brain.
                                            Not the final extraction ($dilate_b0_mask_prelim_brain_extraction).

--run_dwi_denoising                         Run dwi denoising ($run_dwi_denoising).
--extent                                    Denoising block size ($extent).
                                            Rule: extent^3 >= number of directions.

--run_topup                                 Run Topup ($run_topup).
--encoding_direction                        Encoding direction of the DWI [x, y, z] ($encoding_direction).
--readout                                   Readout time ($readout).

--run_eddy                                  Run Eddy ($run_eddy).
--eddy_cmd                                  Eddy command to use [eddy_openmp, eddy_cuda] ($eddy_cmd).
--bet_topup_before_eddy_f                   Fractional Intensity threshold for intermediate BET operation
                                            on topup corrected images ($bet_topup_before_eddy_f).
--use_slice_drop_correction                 If set, will use the slice drop correction option from Eddy ($use_slice_drop_correction).

--bet_dwi_final_f                           Fractional Intensity threshold for the final DWI BET ($bet_dwi_final_f).

--fa_mask_threshold                         FA threshold to compute WM mask for normalization ($fa_mask_threshold).

--run_resample_dwi                          Run resample DWI ($run_resample_dwi).
--dwi_resolution                            DWI resolution ($dwi_resolution).
--dwi_interpolation                         DWI interpolation method [nn, lin, quad, cubic] ($dwi_interpolation).

--run_t1_denoising                          Run T1 denoising ($run_t1_denoising).

--processes_denoise_dwi                     Number of processes for DWI denoising task ($processes_denoise_dwi).
--processes_eddy                            Number of processes for eddy task ($processes_eddy).

--output_dir                                Directory where to write the final results.
                                            By default, will be in "./results"

--processes                                 The number of parallel processes to launch ($cpu_count).
                                            Only affects the local scheduler.

NOTES

The 'scilpy/scripts' folder should be in your PATH environment variable. Not necessary if the
Singularity container is used.

The intermediate working directory is, by default, set to './work'.
To change it, use the '-w WORK_DIR' argument.

The default config file is tractoflow/nextflow.config.
Use '-C config_file.config' to specify a non-default configuration file.
The '-C config_file.config' must be inserted after the nextflow call
like 'nextflow -C config_file.config run ...'.
